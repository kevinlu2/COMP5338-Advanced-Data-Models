// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('a1');
// db.tweets_v2.drop()






// set up
db.tweets.aggregate(
    [
        {
           $project: {
                _id: 1,
                id: 1,
                user_id: 1,
                retweet_id: 1,
                replyto_id: 1,
                retweet_count: 1,
                hash_tags:1,
                created_at: {
                    $dateFromString: {
                    dateString: '$created_at',}
               }
           }
        },  
        {
           $out: 'tweets_v2',
        },
     ])


db.users.insertMany([
  { '_id' : 1, 'name' : 'kevin', 'popularity' : 10},
  { '_id' : 2, 'name' : 'rebecca', 'popularity' : 64},
  { '_id' : 3, 'name' : 'tony', 'popularity' : 'dwed'}
]);




// db.users.drop()


db.users.aggregate([
  {$lookup: {
      from: "tweets",
      let: {
        likes: "$popularity"
      },
      pipeline: [
        { $match: { $expr: { $eq: ["$retweet_count","$$likes"] }}},
        {$limit: 2}
      ],
      as: "uncorrelatedSubQuery"
    }}
]).pretty()


// db.tweets_v2.aggregate([
//   { $lookup: {
//       from: "users",
//       pipeline: [
//         //   {$project: {name:"$name", equal: {$cmp: ['$$likes', '$retweet_count']} }},
//         //   {$match: {equal:1}}
//         { $match: { $expr: { $ne: ["$retweet_count","$popularity"] }}},
//         { $project: { _id: 0, likes: "$popularity", person: { name: "$name", popularity: "$popularity" } } },
//         { $replaceRoot: { newRoot: "$person" } }
//         //  {$match: {$expr: {$eq: ["$$likes","$retweet_count"] }}}
//       ],
//       as: "uncorrelatedSubQuery"
//     }},
//   {$match: {$expr: { $eq: ["$retweet_count",10] }}}
// //   {$limit:5}
// ]).pretty()


// db.users.insertMany([
//   { '_id' : 1, 'name' : 'kevin', 'popularity' : 10},
//   { '_id' : 2, 'name' : 'rebecca', 'popularity' : 11},
//   { '_id' : 3, 'name' : 'tony', 'popularity' : 'dwed'}
// ]);
//   { '_id' : 4, 'name' : 'ricky', 'popularity' : 232231231},
//   { '_id' : 5, 'name' : 'grace', 'popularity' : 0}




// db.users.drop()
// db.tweets_v2.drop()






// // The drop() command destroys all data from a collection.
// // Make sure you run it against proper database and collection.
// db.sales.drop();

// // Insert a few documents into the sales collection.
// db.sales.insertMany([
//   { '_id' : 1, 'item' : 'abc', 'price' : 10, 'quantity' : 2, 'date' : new Date('2014-03-01T08:00:00Z') },
//   { '_id' : 2, 'item' : 'jkl', 'price' : 20, 'quantity' : 1, 'date' : new Date('2014-03-01T09:00:00Z') },
//   { '_id' : 3, 'item' : 'xyz', 'price' : 5, 'quantity' : 10, 'date' : new Date('2014-03-15T09:00:00Z') },
//   { '_id' : 4, 'item' : 'xyz', 'price' : 5, 'quantity' :  20, 'date' : new Date('2014-04-04T11:21:39.736Z') },
//   { '_id' : 5, 'item' : 'abc', 'price' : 10, 'quantity' : 10, 'date' : new Date('2014-04-04T21:23:13.331Z') },
//   { '_id' : 6, 'item' : 'def', 'price' : 7.5, 'quantity': 5, 'date' : new Date('2015-06-04T05:08:13Z') },
//   { '_id' : 7, 'item' : 'def', 'price' : 7.5, 'quantity': 10, 'date' : new Date('2015-09-10T08:43:00Z') },
//   { '_id' : 8, 'item' : 'abc', 'price' : 10, 'quantity' : 5, 'date' : new Date('2016-02-06T20:20:13Z') },
// ]);

// // Run a find command to view items sold on April 4th, 2014.
// db.sales.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });

// // Run an aggregation to view total sales for each product in 2014.
// const aggregation = [
//   { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
//   { $group: { _id : '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
// ];
// db.sales.aggregate(aggregation);
